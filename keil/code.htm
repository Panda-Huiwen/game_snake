<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\code.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\code.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sat Nov 04 20:15:29 2023
<BR><P>
<H3>Maximum Stack Usage =        208 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Snake_Game &rArr; Snake_Move &rArr; Snake_TouchMyself &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[18]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">HW_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[11]">KEYBOARD_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[16]">Reset_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[14]">Sut_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[f]">SysTick_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[13]">Timer_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[10]">VGA_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[17]">__main</a> from __main.o(!!!main) referenced from startup_cmsdk_cm0.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[17]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[19]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1b]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[73]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[74]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[75]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[24]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[76]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[1d]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[77]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[78]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[1f]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[79]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[80]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[81]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[82]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[83]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[84]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[85]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[86]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[87]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[88]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[89]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[29]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[8b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[8c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[8d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[8e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[8f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[90]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[91]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[1a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[92]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[21]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[23]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[93]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[25]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Snake_Game &rArr; Snake_Move &rArr; Snake_TouchMyself &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[94]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[28]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[95]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[46]"></a>rand</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Border_Display_Init
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[16]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))

<P><STRONG><a name="[97]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[f]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler &rArr; SysTickHandler &rArr; SysTick_DISENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>VGA_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_CLEAR_FINISH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>KEYBOARD_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KEYBOARD_Handler &rArr; KEYBOARD_INTERRUPT
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBOARD_INTERRUPT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>HW_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_INTERRUPT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>Timer_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_INTERRUPT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>Sut_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Music_INTERRUPT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[32]"></a>malloc</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createNode
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createList
</UL>

<P><STRONG><a name="[35]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListDestory
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[36]"></a>srand</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[20]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[98]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Border_Display_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sz_Dsiplay
</UL>

<P><STRONG><a name="[9c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[9d]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__Heap_Full</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[3a]"></a>__Heap_Broken</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[1e]"></a>_init_alloc</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[3c]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[6]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a0]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[3b]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[a1]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[27]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3e]"></a>__sig_exit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sig_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[3d]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[2b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[42]"></a>__default_signal_display</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[43]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[2f]"></a>HW_INTERRUPT</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, hongwai.o(i.HW_INTERRUPT))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Handler
</UL>

<P><STRONG><a name="[2e]"></a>KEYBOARD_INTERRUPT</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, keyboard.o(i.KEYBOARD_INTERRUPT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KEYBOARD_INTERRUPT
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBOARD_Handler
</UL>

<P><STRONG><a name="[4a]"></a>LED_SetMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, code_def_1.o(i.LED_SetMode))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBOARD_INTERRUPT
</UL>

<P><STRONG><a name="[72]"></a>LED_SetSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, code_def_1.o(i.LED_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>Music_INTERRUPT</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, music.o(i.Music_INTERRUPT))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sut_Handler
</UL>

<P><STRONG><a name="[54]"></a>SEG4_Display</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, seg.o(i.SEG4_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SEG4_Display &rArr; SEG4_SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEG4_SetData
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEG4_SetDP
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sz_Dsiplay
</UL>

<P><STRONG><a name="[56]"></a>SEG4_SetDP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, seg.o(i.SEG4_SetDP))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEG4_Display
</UL>

<P><STRONG><a name="[55]"></a>SEG4_SetData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, seg.o(i.SEG4_SetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SEG4_SetData
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEG4_Display
</UL>

<P><STRONG><a name="[6b]"></a>Set_SysTick_CTRL</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_CTRL))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DISENABLE
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_systick_1ms
</UL>

<P><STRONG><a name="[6f]"></a>Set_SysTick_LOAD</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_LOAD))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_systick_1ms
</UL>

<P><STRONG><a name="[70]"></a>Set_SysTick_VALUE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_VALUE))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_systick_1ms
</UL>

<P><STRONG><a name="[5b]"></a>Snake_Game</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, snake.o(i.Snake_Game))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Snake_Game &rArr; Snake_Move &rArr; Snake_TouchMyself &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Display_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListDestory
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Border_Display_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_CLEAN
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_DISENABLE
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Config
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_systick_nms
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c]"></a>SysTickHandler</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, systick.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTickHandler &rArr; SysTick_DISENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DISENABLE
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[6a]"></a>SysTick_DISENABLE</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, systick.o(i.SysTick_DISENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_DISENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>Sz_Dsiplay</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, seg.o(i.Sz_Dsiplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Sz_Dsiplay &rArr; SEG4_Display &rArr; SEG4_SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEG4_Display
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
</UL>

<P><STRONG><a name="[5c]"></a>Timer_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(i.Timer_Config))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_timer_1ms
</UL>

<P><STRONG><a name="[5f]"></a>Timer_DISENABLE</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(i.Timer_DISENABLE))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_timer_1ms
</UL>

<P><STRONG><a name="[4c]"></a>Timer_GetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.Timer_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
</UL>

<P><STRONG><a name="[30]"></a>Timer_INTERRUPT</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(i.Timer_INTERRUPT))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Handler
</UL>

<P><STRONG><a name="[60]"></a>VGA_CLEAN</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, vga.o(i.VGA_CLEAN))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>VGA_CLEAR_FINISH</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, vga.o(i.VGA_CLEAR_FINISH))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Handler
</UL>

<P><STRONG><a name="[48]"></a>VGA_DRAW_LINE</STRONG> (Thumb, 72 bytes, Stack size 36 bytes, vga.o(i.VGA_DRAW_LINE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_SET_IMAGE
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Fill
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_DrawRectangle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Border_Display_Init
</UL>

<P><STRONG><a name="[45]"></a>VGA_DrawRectangle</STRONG> (Thumb, 186 bytes, Stack size 44 bytes, vga.o(i.VGA_DrawRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = VGA_DrawRectangle &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_DRAW_LINE
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Border_Display_Init
</UL>

<P><STRONG><a name="[5a]"></a>VGA_Fill</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, vga.o(i.VGA_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_DRAW_LINE
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase_OneJoint
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase
</UL>

<P><STRONG><a name="[4d]"></a>VGA_Rd_Color</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, vga.o(i.VGA_Rd_Color))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VGA_Rd_Color
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_HTW
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
</UL>

<P><STRONG><a name="[6c]"></a>VGA_SET_IMAGE</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, vga.o(i.VGA_SET_IMAGE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VGA_SET_IMAGE
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_ShowChar
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_DRAW_LINE
</UL>

<P><STRONG><a name="[6d]"></a>VGA_ShowChar</STRONG> (Thumb, 226 bytes, Stack size 52 bytes, vga.o(i.VGA_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = VGA_ShowChar &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_SET_IMAGE
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_ShowString
</UL>

<P><STRONG><a name="[63]"></a>VGA_ShowString</STRONG> (Thumb, 108 bytes, Stack size 52 bytes, vga.o(i.VGA_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = VGA_ShowString &rArr; VGA_ShowChar &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_TouchMyself
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_HTW
</UL>

<P><STRONG><a name="[51]"></a>createNode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, snake.o(i.createNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = createNode &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertNodeByTail
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertNodeByHead
</UL>

<P><STRONG><a name="[6e]"></a>delay_systick_1ms</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, delay.o(i.delay_systick_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_systick_1ms
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_VALUE
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_LOAD
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_systick_nms
</UL>

<P><STRONG><a name="[61]"></a>delay_systick_nms</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, delay.o(i.delay_systick_nms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_systick_nms &rArr; delay_systick_1ms
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_systick_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[71]"></a>delay_timer_1ms</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, delay.o(i.delay_timer_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_timer_1ms
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_DISENABLE
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_timer_nms
</UL>

<P><STRONG><a name="[4b]"></a>delay_timer_nms</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, delay.o(i.delay_timer_nms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_timer_nms &rArr; delay_timer_1ms
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_timer_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = main &rArr; Snake_Game &rArr; Snake_Move &rArr; Snake_TouchMyself &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_CLEAN
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DISENABLE
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SetSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[44]"></a>Border_Display_Init</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, snake.o(i.Border_Display_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Border_Display_Init &rArr; VGA_DrawRectangle &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_DrawRectangle
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_DRAW_LINE
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[49]"></a>Create_Food</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, snake.o(i.Create_Food))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Create_Food &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Rd_Color
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_GetValue
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listCheck
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase_OneJoint
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_timer_nms
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SetMode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[5e]"></a>Delay_ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, snake.o(i.Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[50]"></a>InsertNodeByHead</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, snake.o(i.InsertNodeByHead))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InsertNodeByHead &rArr; createNode &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createNode
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Update_BodyXY
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Display_Init
</UL>

<P><STRONG><a name="[52]"></a>InsertNodeByTail</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, snake.o(i.InsertNodeByTail))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InsertNodeByTail &rArr; createNode &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createNode
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Display_Init
</UL>

<P><STRONG><a name="[53]"></a>ListDestory</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, snake.o(i.ListDestory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ListDestory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[69]"></a>ListTailMoveToHead</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, snake.o(i.ListTailMoveToHead))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Update_BodyXY
</UL>

<P><STRONG><a name="[57]"></a>Snake_Display_Init</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, snake.o(i.Snake_Display_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Snake_Display_Init &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createList
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase_OneJoint
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertNodeByTail
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertNodeByHead
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[59]"></a>Snake_Draw_Erase</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, snake.o(i.Snake_Draw_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Snake_Draw_Erase &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Update_HeadXY
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Update_EndXY
</UL>

<P><STRONG><a name="[4f]"></a>Snake_Draw_Erase_OneJoint</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, snake.o(i.Snake_Draw_Erase_OneJoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_TouchMyself
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_HTW
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Display_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
</UL>

<P><STRONG><a name="[62]"></a>Snake_HTW</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, snake.o(i.Snake_HTW))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Snake_HTW &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_ShowString
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Rd_Color
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase_OneJoint
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
</UL>

<P><STRONG><a name="[5d]"></a>Snake_Move</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, snake.o(i.Snake_Move))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Snake_Move &rArr; Snake_TouchMyself &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Rd_Color
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Update_HeadXY
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Update_EndXY
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Update_BodyXY
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_TouchMyself
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_HTW
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase_OneJoint
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sz_Dsiplay
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Game
</UL>

<P><STRONG><a name="[65]"></a>Snake_TouchMyself</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, snake.o(i.Snake_TouchMyself))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Snake_TouchMyself &rArr; Snake_Draw_Erase_OneJoint &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_ShowString
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listCheck
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase_OneJoint
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
</UL>

<P><STRONG><a name="[68]"></a>Snake_Update_BodyXY</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, snake.o(i.Snake_Update_BodyXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Snake_Update_BodyXY &rArr; InsertNodeByHead &rArr; createNode &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListTailMoveToHead
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertNodeByHead
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
</UL>

<P><STRONG><a name="[67]"></a>Snake_Update_EndXY</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, snake.o(i.Snake_Update_EndXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Snake_Update_EndXY &rArr; Snake_Draw_Erase &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
</UL>

<P><STRONG><a name="[66]"></a>Snake_Update_HeadXY</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, snake.o(i.Snake_Update_HeadXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Snake_Update_HeadXY &rArr; Snake_Draw_Erase &rArr; VGA_Fill &rArr; VGA_DRAW_LINE &rArr; VGA_SET_IMAGE
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Draw_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Move
</UL>

<P><STRONG><a name="[58]"></a>createList</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, snake.o(i.createList))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = createList &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Display_Init
</UL>

<P><STRONG><a name="[4e]"></a>listCheck</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, snake.o(i.listCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = listCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_TouchMyself
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Food
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[40]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
